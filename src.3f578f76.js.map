{"version":3,"sources":["js/promise-task1.js","js/promise-task2.js","js/promise-task3.js","index.js"],"names":["delay","ms","Promise","resolve","setTimeout","logger","time","console","log","then","users","name","active","toggleUserState","allUsers","userName","map","user","updatedUsers","table","randomIntegerFromInterval","min","max","Math","floor","random","makeTransaction","id","reject","logSuccess","logError","warn","amount","catch"],"mappings":";;;AAAA,MAAMA,EAAQC,GACJ,IAAIC,QAAQC,IACpBC,WAAW,IAAMD,EAAQF,GAAKA,KAI1BI,EAASC,GAAQC,QAAQC,sBAAsBF,OAGrDN,EAAM,KAAMS,KAAKJ,GACjBL,EAAM,KAAMS,KAAKJ,GACjBL,EAAM,MAAMS,KAAKJ;;ACXjB,MAAMK,EAAQ,CACZ,CAAEC,KAAM,QAASC,QAAQ,GACzB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,OAAQC,QAAQ,GACxB,CAAED,KAAM,MAAOC,QAAQ,IAKnBC,EAAkB,CAACC,EAAUC,IACzB,IAAIb,QAAQC,GAAWA,EAAQW,EAASE,IAAIC,GAClDA,EAAKN,OAASI,EAAW,IAAKE,EAAML,QAASK,EAAKL,QAAWK,KAM3DZ,EAASa,GAAgBX,QAAQY,MAAMD,GAW7CL,EAAgBH,EAAO,SAASD,KAAKJ,GACrCQ,EAAgBH,EAAO,OAAOD,KAAKJ;;AC7BnC,MAAMe,EAA4B,CAACC,EAAKC,IAC/BC,KAAKC,MAAMD,KAAKE,UAAYH,EAAMD,EAAM,GAAKA,GAGhDK,EAAkB,EAAEC,GAAAA,KACjB,IAAIzB,QAAQ,CAACC,EAASyB,KACnB5B,MAAAA,EAAQoB,EAA0B,IAAK,KAE/ChB,WAAW,KACUmB,KAAKE,SAAW,IAGjCtB,EAAQ,CAAEwB,GAAAA,EAAIrB,KAAMN,IAEtB4B,EAAOD,IAEN3B,KAKD6B,EAAa,EAAEF,GAAAA,EAAIrB,KAAAA,MACvBC,QAAQC,mBAAmBmB,kBAAmBrB,QAG1CwB,EAAWH,IACfpB,QAAQwB,qCAAqCJ,+BAa/CD,EAAgB,CAAEC,GAAI,GAAIK,OAAQ,MAC/BvB,KAAKoB,GACLI,MAAMH,GAETJ,EAAgB,CAAEC,GAAI,GAAIK,OAAQ,MAC/BvB,KAAKoB,GACLI,MAAMH,GAETJ,EAAgB,CAAEC,GAAI,GAAIK,OAAQ,KAC/BvB,KAAKoB,GACLI,MAAMH,GAETJ,EAAgB,CAAEC,GAAI,GAAIK,OAAQ,MAC/BvB,KAAKoB,GACLI,MAAMH;;AClDT,aAHA,QAAA,oBACA,QAAA,sBACA,QAAA,sBACA,QAAA","file":"src.3f578f76.js","sourceRoot":"../src","sourcesContent":["const delay = ms => {\n   return new Promise(resolve => {\n  setTimeout(() => resolve(ms), ms);\n  });\n};\n\nconst logger = time => console.log(`Resolved after ${time}ms`);\n\n// Вызовы функции для проверки\ndelay(2000).then(logger); // Resolved after 2000ms\ndelay(1000).then(logger); // Resolved after 1000ms\ndelay(1500).then(logger); // Resolved after 1500ms\n\n","const users = [\n  { name: 'Mango', active: true },\n  { name: 'Poly', active: false },\n  { name: 'Ajax', active: true },\n  { name: 'Lux', active: false },\n];\n\n\n\nconst toggleUserState = (allUsers, userName) => {\n   return new Promise(resolve => resolve(allUsers.map(user =>\n    user.name === userName ? { ...user, active: !user.active } : user,\n  )));\n\n\n};\n\nconst logger = updatedUsers => console.table(updatedUsers);\n\n/*\n * Сейчас работает так\n */\n// toggleUserState(users, 'Mango', logger);\n// toggleUserState(users, 'Lux', logger);\n\n/*\n * Должно работать так\n */\ntoggleUserState(users, 'Mango').then(logger);\ntoggleUserState(users, 'Lux').then(logger);","const randomIntegerFromInterval = (min, max) => {\n  return Math.floor(Math.random() * (max - min + 1) + min);\n};\n\nconst makeTransaction = ({id}) => {\n  return new Promise((resolve, reject) => {\n      const delay = randomIntegerFromInterval(200, 500);\n\n    setTimeout(() => {\n      const canProcess = Math.random() > 0.3;\n\n      if (canProcess) {\n        resolve({ id, time: delay});\n      }\n      reject(id);\n    \n    }, delay);\n  })\n\n};\n\nconst logSuccess = ({id, time}) => {\n  console.log(`Transaction ${id} processed in ${time}ms`);\n};\n\nconst logError = id => {\n  console.warn(`Error processing transaction ${id}. Please try again later.`);\n};\n\n/*\n * Работает так\n */\n// makeTransaction({ id: 70, amount: 150 }, logSuccess, logError);\n// makeTransaction({ id: 71, amount: 230 }, logSuccess, logError);\n// makeTransaction({ id: 72, amount: 75 }, logSuccess, logError);\n// makeTransaction({ id: 73, amount: 100 }, logSuccess, logError);\n/*\n * Должно работать так\n */\nmakeTransaction({ id: 70, amount: 150 })\n  .then(logSuccess)\n  .catch(logError);\n\nmakeTransaction({ id: 71, amount: 230 })\n  .then(logSuccess)\n  .catch(logError);\n\nmakeTransaction({ id: 72, amount: 75 })\n  .then(logSuccess)\n  .catch(logError);\n\nmakeTransaction({ id: 73, amount: 100 })\n  .then(logSuccess)\n  .catch(logError);\n\n\n\n","import './sass/main.scss';\nimport './js/promise-task1';\nimport './js/promise-task2';\nimport './js/promise-task3';"]}